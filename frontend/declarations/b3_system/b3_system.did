type Bug = record {
  hash : vec nat8;
  logs : vec text;
  name : text;
  canister_id : principal;
  description : text;
  version : text;
};
type CanisterStatusResponse = record {
  status : CanisterStatusType;
  memory_size : nat;
  cycles : nat;
  settings : DefiniteCanisterSettings;
  idle_cycles_burned_per_day : nat;
  module_hash : opt vec nat8;
};
type CanisterStatusType = variant { stopped; stopping; running };
type DefiniteCanisterSettings = record {
  freezing_threshold : nat;
  controllers : vec principal;
  memory_allocation : nat;
  compute_allocation : nat;
};
type LoadRelease = record { total : nat64; version : text; chunks : nat64 };
type Release = record {
  features : opt vec text;
  date : nat64;
  hash : vec nat8;
  name : text;
  size : nat64;
  version : text;
  deprecated : bool;
};
type ReleaseArgs = record {
  features : opt vec text;
  name : text;
  size : nat64;
  version : text;
};
type ReleaseNames = variant {
  b3_wallet;
  Custom : text;
  b3_multi_sig_wallet;
  b3_basic_wallet;
};
type Result = variant { Ok : UserState; Err : text };
type SystemCanisterStatus = record {
  canister_id : principal;
  user_status : nat64;
  status_at : nat64;
  version : text;
  canister_status : CanisterStatusResponse;
};
type UserState = record {
  updated_at : nat64;
  created_at : nat64;
  canisters : vec principal;
};
service : () -> {
  add_controller : (principal) -> ();
  add_wallet_canister : (principal) -> ();
  change_wallet_canister : (principal, nat64) -> ();
  clear_bugs : () -> ();
  create_wallet_canister : (text) -> (Result);
  deprecate_release : (text, text) -> ();
  get_bugs : () -> (vec Bug) query;
  get_canister_version : (principal) -> (text);
  get_canister_version_by_user : (principal, nat64) -> (text);
  get_canisters : () -> (vec principal) query;
  get_controllers : () -> (vec principal) query;
  get_create_canister_wallet_cycle : () -> (nat) query;
  get_release : (text, text) -> (Release) query;
  get_release_by_hash_string : (text, vec nat8) -> (Release) query;
  get_release_by_index : (text, nat64) -> (Release) query;
  get_states : () -> (UserState) query;
  get_user_ids : () -> (vec principal) query;
  get_user_states : () -> (vec UserState) query;
  install_wallet_canister : (text, principal) -> (Result);
  latest_release : (text) -> (Release) query;
  load_release : (text, vec nat8, ReleaseArgs) -> (LoadRelease);
  release_map : () -> (vec record { ReleaseNames; vec Release }) query;
  releases : (text) -> (vec Release) query;
  remove_controller : (principal) -> ();
  remove_latest_release : (text) -> ();
  remove_release : (text, text) -> (Release);
  remove_wallet_canister : (principal) -> ();
  report_bug : (Bug) -> ();
  reset_users : () -> ();
  status : () -> (SystemCanisterStatus);
  update_release : (text, ReleaseArgs) -> ();
  version : () -> (text) query;
}
